{"version":3,"sources":["components/Profile/Profile.js","components/Statistics/Statistics.js","components/Friendlist/FriendListItem.js","components/Friendlist/FriendList.js","components/Transaction/TransactionHistory.js","components/App.js","index.js"],"names":["ProfileCard","styled","div","Avatar","img","Name","p","Tag","Location","Stats","ul","StatsItem","li","StatsCategory","span","StatsValue","Profile","props","avatar","name","tag","location","stats","followers","views","likes","src","alt","defaultProps","Section","section","Title","h2","StatsList","DocType","PercentOfUse","Statistics","title","length","map","data","key","id","label","percentage","ListItem","CircleOfPresence","online","FriendListItem","isOnline","ListOfFriends","FriendList","friends","friend","propeTypes","PropTypes","arrayOf","object","isRequired","Table","table","TableHead","thead","th","TableRow","tr","TableCeil","td","TransactionHistory","items","item","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.bcb39afa.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst ProfileCard = styled.div`\r\nmargin: 0 auto;\r\nmargin-top: 40px;\r\nmargin-bottom: 40px;\r\npadding-top: 30px; \r\nwidth: 360px;\r\ntext-align: center;\r\nbackground-color: white;\r\n\r\n`;\r\n\r\nconst Avatar = styled.img`\r\nmargin-bottom: 30px;\r\nborder-radius: 50%;\r\n`;\r\n\r\nconst Name = styled.p`\r\nmargin-bottom: 15px;\r\nfont-size: 18px;\r\nfont-weight: 700;\r\n`;\r\n\r\nconst Tag = styled.p`\r\nmargin-bottom: 10px;\r\nfont-size: 16px;\r\nfont-weight: 200;\r\n\r\n`;\r\n\r\nconst Location = styled.p`\r\nmargin-bottom: 20px;\r\nfont-size: 16px;\r\nfont-weight: 400;\r\n`;\r\n\r\nconst Stats = styled.ul`\r\ndisplay: flex;\r\n\r\n`;\r\nconst StatsItem = styled.li`\r\npadding: 20px 0;\r\nwidth: 120px;\r\ndisplay: flex;\r\nflex-direction: column;\r\nborder: 1px solid #e4e9f0;\r\nbackground-color: #f3f6f9;\r\n\r\n`;\r\n\r\nconst StatsCategory = styled.span`\r\nmargin-bottom: 12px;\r\nfont-size: 16px;\r\n\r\n`;\r\n\r\nconst StatsValue = styled.span`\r\nfont-weight: 700;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n function Profile (props){\r\n const {avatar, name, tag, location, stats:{followers, views, likes}} = props;\r\n  return (\r\n  <ProfileCard>\r\n    <div>\r\n    <Avatar \r\n      src= {avatar}\r\n      alt = \"user avatar\"\r\n      \r\n      />\r\n    <Name >{name}</Name>\r\n    <Tag>@{tag}</Tag>\r\n    <Location>{location}</Location>\r\n    </div>\r\n    <Stats>\r\n    <StatsItem>\r\n      <StatsCategory>Followers</StatsCategory>\r\n      <StatsValue>{followers}</StatsValue>\r\n    </StatsItem>\r\n    <StatsItem>\r\n      <StatsCategory>Views</StatsCategory>\r\n      <StatsValue>{views}</StatsValue>\r\n    </StatsItem>\r\n    <StatsItem>\r\n      <StatsCategory>Likes</StatsCategory>\r\n      <StatsValue>{likes}</StatsValue>\r\n    </StatsItem>\r\n    </Stats> \r\n  </ProfileCard> \r\n  )\r\n}\r\nProfile.defaultProps = {\r\n  avatar: \"https://0.gravatar.com/avatar/ad516503a11cd5ca435acc9bb6523536?s=150\",\r\n  followers: 0,\r\n  views: 0,\r\n  likes: 0,\r\n}\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string,\r\n  location: PropTypes.string,\r\n  stats: PropTypes.exact({\r\n    followers: PropTypes.number, \r\n    views: PropTypes.number, \r\n    likes: PropTypes.number,\r\n\r\n  })\r\n  \r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import statisticalData from '../../data/statistical-data.json';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section`\r\nmargin: 0 auto;\r\nmargin-bottom: 40px;\r\npadding-top: 20px;\r\nwidth: 360px;\r\ntext-align: center;\r\nbackground-color: #fff;\r\n`;\r\nconst Title = styled.h2`\r\nmargin: 20 auto;\r\npadding-bottom: 20px;\r\n/* text-align: center; */\r\ncolor: #585a55;\r\n\r\n`;\r\n\r\nconst StatsList = styled.ul`\r\ndisplay: flex;\r\n\r\n`;\r\n\r\nconst StatsItem = styled.li`\r\ndisplay: flex;\r\nflex-direction: column;\r\npadding: 10px 0;\r\nwidth:72px;\r\n/* text-align: center; */\r\nborder: 1px solid #e4e9f0;\r\nbackground-color: #6f716d;\r\n`;\r\n\r\nconst DocType = styled.span`\r\npadding-bottom: 5px;\r\nfont-size: 16px;\r\ncolor: white;\r\n\r\n`;\r\nconst PercentOfUse = styled.span`\r\nfont-size: 18px;\r\nfont-weight: 700;\r\ncolor: #fff;\r\n\r\n`;\r\n\r\n\r\nfunction Statistics({title, stats}){\r\n    return(\r\n        <Section>\r\n            {title.length>0 && (\r\n            <Title>{title}</Title>\r\n            )}\r\n            <StatsList>\r\n              {stats.map(data => <StatsItem key = {data.id}><DocType>{data.label}</DocType><PercentOfUse>{data.percentage}%</PercentOfUse></StatsItem>)}\r\n            </StatsList>\r\n        </Section>\r\n    )\r\n}\r\nStatistics.defaultProps = {\r\n    title: '',\r\n}\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    \r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n// import friends from '../../data/friends.json';\r\n\r\nconst ListItem = styled.li`\r\ndisplay: flex;\r\nmargin: 15px auto;\r\npadding: 7px 15px;\r\n/* width: 400px; */\r\nbackground-color: #fff;\r\nbox-shadow: 0px 5px 5px 0px;\r\nalign-items: center;\r\n`;\r\n\r\nconst CircleOfPresence = styled.span`\r\nmargin-right: 15px;\r\nwidth: 25px;\r\nheight: 25px;\r\nbackground-color: ${props => props.online? 'green': 'red'};\r\nborder-radius: 50%;\r\n\r\n`;\r\n\r\nconst Name = styled.p`\r\nmargin-left: 15px;\r\nfont-size: 24px;\r\nfont-weight: 700;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\nborder-radius: 10px;\r\n`;\r\nfunction FriendListItem ({avatar, name, isOnline}){\r\n\r\n    return(\r\n        \r\n        <ListItem>\r\n            <CircleOfPresence online = {isOnline}/>\r\n            \r\n            <Avatar src = {avatar} alt = {name}/>\r\n            <Name>{name}</Name>\r\n\r\n        </ListItem>\r\n    )\r\n   \r\n}\r\n\r\n\r\nFriendListItem.defaultProps = {\r\n    avatar: \"https://0.gravatar.com/avatar/ad516503a11cd5ca435acc9bb6523536?s=128\",\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    avatar: PropTypes.string,\r\n    isOnline: PropTypes.bool.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport FriendListItem from './FriendListItem';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst ListOfFriends = styled.ul`\r\nmargin: 0 auto;\r\nwidth: 360px;\r\nmargin-bottom: 40px;\r\n`;\r\n\r\nfunction FriendList ({friends}){\r\n    return(\r\n        <ListOfFriends>\r\n        {friends.map(friend =>\r\n        <FriendListItem  \r\n        key = {friend.id}\r\n        avatar = {friend.avatar}\r\n        name = {friend.name} \r\n        isOnline = {friend.isOnline}\r\n        />)}\r\n        </ListOfFriends>\r\n    )\r\n}\r\n\r\nFriendList.propeTypes = {\r\n friends: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default FriendList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\nwidth: 360px;\r\nmargin: 0 auto;\r\nmargin-bottom: 40px;\r\ntext-align: center;\r\nborder: 1ps solid #a4ccdc;\r\nbox-shadow: 0px 0px 2px 0px;\r\n\r\n`;\r\n\r\nconst TableHead = styled.thead`\r\n/* paddding: 10px auto; */\r\nbackground-color: #138bbd;\r\nborder-left: 1px solid #fff;\r\ncolor: #fff;\r\n`;\r\n\r\nconst Title = styled.th`\r\npadding: 10px 0;\r\nfont-size: 14px;\r\ntext-transform: uppercase;\r\n`;\r\n\r\nconst TableRow = styled.tr`\r\n&:nth-child(odd){\r\n  background-color: #fff;\r\n};\r\n&:nth-child(even){\r\n  background-color: #ecf1f4;\r\n}\r\n;`\r\n\r\nconst TableCeil = styled.td`\r\npadding: 10px 0;\r\n`;\r\n\r\n\r\nfunction TransactionHistory ({items}){\r\n  return(\r\n    <Table>\r\n      <TableHead>\r\n        <tr>\r\n        <Title>Type</Title>\r\n        <Title>Amount</Title>\r\n        <Title>Currency</Title>\r\n        </tr>\r\n      </TableHead>\r\n      <tbody>\r\n        {items.map(\r\n            item => <TableRow key={item.id}><TableCeil>{item.type}</TableCeil><TableCeil>{item.amount}</TableCeil><TableCeil>{item.currency}</TableCeil></TableRow>\r\n            )}\r\n          \r\n        \r\n        \r\n      </tbody>\r\n    </Table>\r\n  )\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items:PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  \r\n}\r\nexport default TransactionHistory;","import React from 'react'\r\nimport Profile from './Profile/Profile'\r\nimport Statistics from './Statistics/Statistics'\r\nimport FriendList from './Friendlist/FriendList'\r\nimport TransactionHistory from './Transaction/TransactionHistory'\r\nimport user from '../data/user.json'\r\nimport statisticalData from '../data/statistical-data.json'\r\nimport friends from '../data/friends.json'\r\nimport transactions from '../data/transactions'\r\n\r\nexport default function App(){\r\n    return(\r\n        <>\r\n            <Profile\r\n                name={user.name} \r\n                avatar={user.avatar}\r\n                tag={user.tag}\r\n                location={user.location}\r\n                stats={user.stats}\r\n            />\r\n\r\n            <Statistics title=\"Upload stats\" stats={statisticalData}/>\r\n            <FriendList friends={friends}/>\r\n            <TransactionHistory items={transactions}/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles.css';\n\n\n\n\n\n\n\nReactDOM.render(<App/>, document.querySelector('#root'));\n"],"sourceRoot":""}